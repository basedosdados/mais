source_bucket_name: basedosdados-dev
project_id_staging: basedosdados-dev
project_id_prod: basedosdados-dev
table_id: censo2010_populacao_idade # AUTO GENERATED
dataset_id: br_ponte_indicadores # AUTO GENERATED

url_ckan: https://basedosdados.org/dataset/br-ponte-indicadores # AUTO GENERATED
url_github: https://github.com/basedosdados/mais/tree/master/bases/br_ponte_indicadores # AUTO GENERATED

version: v1.0 # REQUIRED

last_updated: 2020-12-01 # AUTO GENERATED

# Descreva a tabela. Essas são as primeiras frases que um usuário vai ver.
# Você não precisa ser muito conciso. Sinta-se a vontade para dar exemplos de
# como usar os dados.
# Se souber, liste também aplicações: pesquisa, apps, etc. que usem os dados.
description: |  # REQUIRED
    <descrição>

# Qual organização/departamento/pessoa tratou os dados?
# As vezes há um ponto intermediário entre os dados originais e subir na Base dos Dados.
# Se essa pessoa é você, preencha abaixo com suas informações.
treated_by:
    name: <nome>  # REQUIRED
    code_url: https://github.com/basedosdados/mais/tree/master/bases/br_ponte_indicadores/code # REQUIRED
    website: <onde encontrar os dados tratados>
    email: <email>

# Quem está completando esse arquivo config?
published_by:
    name: <nome [você]>  # REQUIRED
    code_url: https://github.com/basedosdados/mais/tree/master/bases/br_ponte_indicadores/code # REQUIRED
    website: <website>
    email: <email>

# Se houve passos de tratamento, limpeza e manipulação de dados, descreva-os aqui.
treatment_description: | 
    <CEPESP fez X. Eu fiz K>

# Com qual frequência a base é atualizada?
# Opções: hora | dia | semana | mês | 1 ano | 2 anos | 5 anos | 10 anos | único | recorrente
data_update_frequency: <frequência> # REQUIRED 

# Nível da observação (qual é a granularidade de cada linha na tabela)
# Escolha todas as opções necessárias.
# Regras:
#   - minúsculo, sem acento, singular.
#   - em portugues (ou seja, não use os nomes de colunas abaixo)
# Exemplos: pais, estado, municipio, cidade, hora, dia, semana, mes, ano, etc.
observation_level:
    - <primeira coluna>
    - <segunda coluna>

# Quais colunas identificam uma linha unicamente?
# Preencha com os nomes de colunas. Ex: id_municipio, ano.
# Pode ser vazio pois certas tabelas não possuem identificadores.
primary_keys:

# Qual é a cobertura espacial da tabela?
# Regras:
#   - minúsculo, sem acento, singular
#   - descer até o menor nível administrativo cuja cobertura abaixo seja 'todos'
# Exemplo 1: tabela que cubra todos os municípios nos estados de SP e GO
#   - brasil
#   - SP, GO
# Exemplo 2: tabela que cubra países inteiros na América Latina
#   - brasil, argentina, peru, equador
coverage_geo:
    - <admin0 - pais>
    - <admin1 - estados/regioes/etc>
    - <admin2 - municipios/counties/etc>
    - <admin3 - distritos/subdistritos/etc>

# Qual é a cobertura temporal (em anos) da tabela?
# Opções: pre-1999, 2000, 2001, ..., 2019, 2020
coverage_time:
    - <ano 1>
    - <ano 2>

# Liste as colunas da tabela que representam partições.
# Não esqueça de deletar essas colunas nas tabelas .csv na hora de subir para o BigQuery.
# Isso poupará muito tempo e dinheiro às pessoas utilizando essa tabela.
# Se não houver partições, não modifique abaixo.
partitions: # REQUIRED

# Quais são as colunas? Certifique-se de escrever uma boa descrição, as pessoas vão gostar
# para saber sobre o que é a coluna.
# Adicionar todas as colunas manualmente pode ser bastante cansativo, por isso, quando
# inicializando este arquivo de configuração, você pode apontar a função para uma amostra de dados que
# preencherá automaticamente as colunas.
# Algumas colunas existirão apenas na tabela final, você as construirá em `publish.sql`.
# Para esses, defina is_in_staging como False.
# Além disso, você deve adicionar as colunas de partição aqui e definir is_partition como True.
columns: # REQUIRED
  
    -   
        name: id_municipio
        description: <descrição da coluna>
        is_in_staging: True # Bool [True, False], whether the column is in the staging table
        is_partition: False # Bool [True, False], whether the column is a partition.
  
    -   
        name: ordem
        description: <descrição da coluna>
        is_in_staging: True # Bool [True, False], whether the column is in the staging table
        is_partition: False # Bool [True, False], whether the column is a partition.
  
    -   
        name: grupo_idade
        description: <descrição da coluna>
        is_in_staging: True # Bool [True, False], whether the column is in the staging table
        is_partition: False # Bool [True, False], whether the column is a partition.
  
    -   
        name: populacao_homens
        description: <descrição da coluna>
        is_in_staging: True # Bool [True, False], whether the column is in the staging table
        is_partition: False # Bool [True, False], whether the column is a partition.
  
    -   
        name: populacao_mulheres
        description: <descrição da coluna>
        is_in_staging: True # Bool [True, False], whether the column is in the staging table
        is_partition: False # Bool [True, False], whether the column is a partition.

% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/bdplyr.R
\name{bdplyr}
\alias{bdplyr}
\title{Compatibilidade com {dplyr}}
\usage{
bdplyr(table, billing_project_id = basedosdados::get_billing_id())
}
\arguments{
\item{table}{Caminho no formato basedosdados.\<dataset\>.\<tabela\>}

\item{billing_project_id}{billing_id.}
}
\value{
Tabela em formato manipulável
}
\description{
Realiza conexão com o Google BigQuery via {DBI} e torna a base
compatível com as operações básicas do {dplyr} tais como glimpse(),
filter(), select(), mutate(), _join(), etc.

Após realizar as operações, usar dplyr::collect() para finalizar a
requisição.

Ver também: https://rdrr.io/cran/bigrquery/man/src_bigquery.html
}
\examples{

\dontrun{

# definir billing
basedosdados::set_billing_id("nimble-root-312115")

# carregar a base que quero
base_sim <- bdplyr("br_ms_sim.municipio_causa_idade")

# carregar outra base
municipios <- bdplyr("br_bd_diretorios_brasil.municipio")

# explorar
base_sim \%>\%
  dplyr::glimpse()


municipios \%>\%
  dplyr::select(dplyr::everything()) \%>\%
  head()

# filtrar
base_sim_acre <- base_sim \%>\%
 dplyr::mutate(ano = as.numeric(ano)) \%>\%
  dplyr::filter(sigla_uf == "AC", ano >= 2018)

municipios_acre <- municipios \%>\%
  dplyr::filter(sigla_uf == "AC") \%>\%
  dplyr::select(id_municipio, municipio, regiao)


# join
base_junta <- base_sim_acre \%>\%
  dplyr::left_join(municipios_acre,
                   by = "id_municipio")

# testar se deu certo
base_junta

# coletar reusltado
base_final <- base_junta \%>\%
  dplyr::collect()

base_final

}
}

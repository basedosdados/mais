class(as_tibble(mtcars))
expect_s3_class(as_tibble(mtcars)),  "tbl_df"
expect_s3_class(as_tibble(mtcars),  "tbl_df")
list.files(getwd())
purrr::keep(list.files(getwd()), ~ stringr::str_detect(.x, ".env"))
readline("asioudhaiosudyfh")
readline(glue::glue(
"There is a dotenv file in the working directory.
If you've already set the ´billing_project_id´ environment variable, it's safe to press N.
If not, then the value attributed to ´billing_project_id´ in {env_files} can be set.
Would you like to proceed? [y / n]
"))
env_files <- purrr::keep(list.files(getwd()), ~ stringr::str_detect(.x, ".env"))
readline(glue::glue(
"There is a dotenv file in the working directory.
If you've already set the ´billing_project_id´ environment variable, it's safe to press N.
If not, then the value attributed to ´billing_project_id´ in {env_files} can be set.
Would you like to proceed? [y / n]
"))
readline(glue::glue(
"There is a dotenv file in the working directory.
If you've already set the ´billing_project_id´ environment variable, it's safe to press N.
If not, then the value attributed to ´billing_project_id´ in {env_files} can be set.
Would you like to proceed? [y / n]
"))
readline(glue::glue(
"There is a dotenv file in the working directory.
If you've already set the ´billing_project_id´ environment variable, it's safe to press N.
If not, then the value attributed to ´billing_project_id´ in {env_files} can be set.
Would you like to proceed? [y // n]"))
readline(glue::glue(
"There is a dotenv file in the working directory.
If you've already set the ´billing_project_id´ environment variable, it's safe to press N.
If not, then the value attributed to ´billing_project_id´ in {env_files} can be set.
Would you like to proceed? [y \ n]"))
if(length(env_files) == 1) {
readline(glue::glue(
"There is a dotenv file in the working directory.
If you've already set the ´billing_project_id´ environment variable, it's safe to press N.
If not, then the value attributed to ´billing_project_id´ in {env_files} can be set.
Would you like to proceed? [y \ n]"))
}
check()
check()
install()
check()
check()
test_check("basedosdados")
source('C:/Users/pedro/Desktop/Cava/mais/rbdd/R/billing.R', encoding = 'UTF-8', echo=TRUE)
source('C:/Users/pedro/Desktop/Cava/mais/rbdd/R/python_port.R', echo=TRUE)
check()
check()
library(devtools)
install()
install()
install()
library(devtools)
install()
install()
test_check("basedosdados")
library(testthat)
library(basedosdados)
test_check("basedosdados")
test_check("basedosdados")
test_local()
test_local()
test_local()
bq_auth()
bigrquery::bq_auth()
test_local()
test_local()
library(testthat)
library(basedosdados)
test_check("basedosdados")
test_local("basedosdados")
.libPaths
.libPaths()
library(testthat)
library(basedosdados)
test_local("basedosdados")
test_local()
install()
devtools::install()
devtools::install()
usethis::use_testthat()
source('C:/Users/pedro/Desktop/Cava/mais/r-package/tests/testthat.R', echo=TRUE)
usethis::use_testthat()
usethis::use_test("read_sql retorna um tibble")
test_check("basedosdados")
test_local()
test_check("basedosdados")
rlang::last_error()
testthat::test_dir()
rlang::last_trace()
test_package()
test_package("basedosdados")
devtools::test()
cli::cli_h1("Base dos Dados: Facilitando o acesso a dados no Brasil")
cli::cli_h2("Contatos")
cli::cli_ul()
cli::cli_li("Twitter: @basedosdados")
cli::cli_li("Email: contato@basedosdados.org")
cli::cli_li("Telegram: t.me/joinchat/OKWc3RnClXnq2hq-8o0h_w")
cli::cli_li("Apoia.se: apoia.se/basedosdados")
cli::cli_li("Github: github.com/basedosdados")
cli::cli_li("Discord: discord.gg/tuaFbAPeq5")
cli::cli_li("LinkedIn: linkedin.com/company/base-dos-dados")
cli::cli_li("Newsletter: tinyletter.com/basedosdados")
}
cli::cli_h1("Base dos Dados: Facilitando o acesso a dados no Brasil")
cli::cli_h2("Contatos")
cli::cli_ul()
cli::cli_li("Twitter: @basedosdados")
cli::cli_li("Email: contato@basedosdados.org")
cli::cli_li("Telegram: t.me/joinchat/OKWc3RnClXnq2hq-8o0h_w")
cli::cli_li("Apoia.se: apoia.se/basedosdados")
cli::cli_li("Github: github.com/basedosdados")
cli::cli_li("Discord: discord.gg/tuaFbAPeq5")
cli::cli_li("LinkedIn: linkedin.com/company/base-dos-dados")
cli::cli_li("Newsletter: tinyletter.com/basedosdados")
{
cli::cli_h1("Base dos Dados: Facilitando o acesso a dados no Brasil")
cli::cli_h2("Contatos")
cli::cli_ul()
cli::cli_li("Twitter: @basedosdados")
cli::cli_li("Email: contato@basedosdados.org")
cli::cli_li("Telegram: t.me/joinchat/OKWc3RnClXnq2hq-8o0h_w")
cli::cli_li("Apoia.se: apoia.se/basedosdados")
cli::cli_li("Github: github.com/basedosdados")
cli::cli_li("Discord: discord.gg/tuaFbAPeq5")
cli::cli_li("LinkedIn: linkedin.com/company/base-dos-dados")
cli::cli_li("Newsletter: tinyletter.com/basedosdados")}
{  cli::cli_h1("Base dos Dados: Facilitando o acesso a dados no Brasil")
#  cli::cli_h2("Contatos")
cli::cli_ul()
cli::cli_li("Twitter: @basedosdados")
cli::cli_li("Email: contato@basedosdados.org")
cli::cli_li("Telegram: t.me/joinchat/OKWc3RnClXnq2hq-8o0h_w")
cli::cli_li("Apoia.se: apoia.se/basedosdados")
cli::cli_li("Github: github.com/basedosdados")
cli::cli_li("Discord: discord.gg/tuaFbAPeq5")
cli::cli_li("LinkedIn: linkedin.com/company/base-dos-dados")
cli::cli_li("Newsletter: tinyletter.com/basedosdados")}
devtools::document()
devtools::build(path = getwd())
devtools::check()
devtools::check()
devtools::check()
devtools::document()
warnings()
devtools::document()
devtools::check()
devtools::check()
devtools::check()
install.packages("writexl")
devtools::check()
usethis::use_build_ignore("Keys.env")
usethis::use_build_ignore("keys.env")
usethis::use_build_ignore("*.tar.gz")
usethis::use_build_ignore("*.Rproj")
check()
devtools::check()
usethis::use_build_ignore("[.]Rproj$")
usethis::use_build_ignore("[.]tar.gz$")
usethis::use_build_ignore("[.]env$")
devtools::check()
devtools::check()
devtools::check()
usethis::use_build_ignore("[.]tar.gz$", escape = FALSE)
usethis::use_build_ignore()
usethis::use_build_ignore(c("keys.env", "basedosdados.Rproj", "basedosdados_0.0.3.tar.gz"))
check()
devtools:check()
devtools::check()
devtools::check()
devtools::check()
devtools::check()
devtools::check()
devtools::check()
devtools::check()
devtools::check()
devtools::check()
document()
devtools::document()
devtools::check()
devtools::document()
devtools::check()
devtools::check()
devtools::check()
devtools::check()
devtools::check()
devtools::check()
devtools::check()
devtools??build()
devtools::build()
devtools::build()
devtools::build(getwd())
devtools::check()
devtools::build(getwd())
devtools::build(getwd())
devtools::test()
devtools::document()
devtools::install()
devtools::install()
devtools::install()
devtools::session()
devtools::install()
devtools::document()
devtools::install()
devtools::document()
tempdir()
devtools::build()
devtools::install()
library(basedosdados)
devtools::document()
devtools::install()
devtools::build()
devtools::document()
devtools::build()
devtools::build()
devtools::document()
devtools::build()
devtools::build()
devtools::build()
devtools::check()
devtools::test()
devtools::test()
getwd()
devtools::test()
devtools::test()
devtools::test()
devtools::test()
devtools::build()
devtools::build()
devtools::release_checks()
devtools::release()
devtools::spell_check()
devtools::spell_check()
devtools::release()
devtools::check_win_release()
install.packages("blogdown")
install.packages("blogdown")
devtools::check_win_release()
devtools::check_win_release()
devtools::check()
devtools::check(cran = TRUE)
devtools::submit_cran()
renv::activate()
install.packages(c("bigrquery", "rlang", "magrittr", "readr", "purrr", "dotenv", "glue"))
install.packages(c("cli", "writexl", "stringr", "httr", "dplyr"))
install.packages("typed")
usethis::use_package("typed")
install.packages("usethis")
usethis::use_package("typed")
devtools::load_all()
install.packages("devtools")
devtools::load_all()
install.packages("goggleAuthR")
install.packages("googleAuthR")
devtools::load_all()
cli::cli_li(
c(
"Discord: discord.gg/tuaFbAPeq5",
"Twitter: @basedosdados",
"Email: contato@basedosdados.org",
"Telegram: t.me/joinchat/OKWc3RnClXnq2hq-8o0h_w",
"Github: github.com/basedosdados",
"LinkedIn: linkedin.com/company/base-dos-dados",
"Newsletter: https://basedosdados.hubspotpagebuilder.com/assine-a-newsletter-da-base-dos-dados",
"WhatsApp: https://chat.whatsapp.com/HXWgdFc1RmwCoblly5KPBZ",
"YouTube: https://www.youtube.com/c/BasedosDados"))
{  cli::cli_h1("Base dos Dados: Universalizando o acesso a dados no Brasil")
cli::cli_h2("")
cli::cli_ul()
cli::cli_li("Site oficial: https://basedosdados.org/")
cli::cli_li("Documentação: https://basedosdados.github.io/mais/")
cli::cli_end()
cli::cli_h2("Contatos")
cli::cli_ul()
cli::cli_li(
c(
"Discord: discord.gg/tuaFbAPeq5",
"Twitter: @basedosdados",
"Email: contato@basedosdados.org",
"Telegram: t.me/joinchat/OKWc3RnClXnq2hq-8o0h_w",
"Github: github.com/basedosdados",
"LinkedIn: linkedin.com/company/base-dos-dados",
"Newsletter: https://basedosdados.hubspotpagebuilder.com/assine-a-newsletter-da-base-dos-dados",
"WhatsApp: https://chat.whatsapp.com/HXWgdFc1RmwCoblly5KPBZ",
"YouTube: https://www.youtube.com/c/BasedosDados"))
cli::cli_end()
cli::cli_h3(
"A Base dos Dados é um projeto open-source e todo gratuito para usuários. Para nos mantermos e crescermos precisamos do seu apoio. Quanto vale as horas do seu trabalho que poupamos?
Nos apoie em https://apoia.se/basedosdados.")}
{  cli::cli_h1("Base dos Dados: Universalizando o acesso a dados no Brasil")
cli::cli_h2("")
cli::cli_ul()
cli::cli_li(
c(
"Site oficial: https://basedosdados.org/",
"Documentação: https://basedosdados.github.io/mais/"))
cli::cli_end()
cli::cli_h2("Contatos")
cli::cli_ul()
cli::cli_li(
c(
"Discord: discord.gg/tuaFbAPeq5",
"Twitter: @basedosdados",
"Email: contato@basedosdados.org",
"Telegram: t.me/joinchat/OKWc3RnClXnq2hq-8o0h_w",
"Github: github.com/basedosdados",
"LinkedIn: linkedin.com/company/base-dos-dados",
"Newsletter: https://basedosdados.hubspotpagebuilder.com/assine-a-newsletter-da-base-dos-dados",
"WhatsApp: https://chat.whatsapp.com/HXWgdFc1RmwCoblly5KPBZ",
"YouTube: https://www.youtube.com/c/BasedosDados"))
cli::cli_end()
cli::cli_h3(
"A Base dos Dados é um projeto open-source e todo gratuito para usuários. Para nos mantermos e crescermos precisamos do seu apoio. Quanto vale as horas do seu trabalho que poupamos?
Nos apoie em https://apoia.se/basedosdados.")
}
{  cli::cli_h1("Base dos Dados: Universalizando o acesso a dados no Brasil")
cli::cli_h2("")
cli::cli_li(
c(
"Site oficial: https://basedosdados.org/",
"Documentação: https://basedosdados.github.io/mais/"))
cli::cli_end()
cli::cli_h2("Contatos")
cli::cli_ul()
cli::cli_li(
c(
"Discord: discord.gg/tuaFbAPeq5",
"Twitter: @basedosdados",
"Email: contato@basedosdados.org",
"Telegram: t.me/joinchat/OKWc3RnClXnq2hq-8o0h_w",
"Github: github.com/basedosdados",
"LinkedIn: linkedin.com/company/base-dos-dados",
"Newsletter: https://basedosdados.hubspotpagebuilder.com/assine-a-newsletter-da-base-dos-dados",
"WhatsApp: https://chat.whatsapp.com/HXWgdFc1RmwCoblly5KPBZ",
"YouTube: https://www.youtube.com/c/BasedosDados"))
cli::cli_end()
cli::cli_h3(
"A Base dos Dados é um projeto open-source e todo gratuito para usuários. Para nos mantermos e crescermos precisamos do seu apoio. Quanto vale as horas do seu trabalho que poupamos?
Nos apoie em https://apoia.se/basedosdados.")}
{cli::cli_h1("Base dos Dados: Universalizando o acesso a dados no Brasil")
cli::cli_li(
c(
"Site oficial: https://basedosdados.org/",
"Documentação: https://basedosdados.github.io/mais/"))
cli::cli_end()
cli::cli_h2("Contatos")
cli::cli_ul()
cli::cli_li(
c(
"Discord: discord.gg/tuaFbAPeq5",
"Twitter: @basedosdados",
"Email: contato@basedosdados.org",
"Telegram: t.me/joinchat/OKWc3RnClXnq2hq-8o0h_w",
"Github: github.com/basedosdados",
"LinkedIn: linkedin.com/company/base-dos-dados",
"Newsletter: https://basedosdados.hubspotpagebuilder.com/assine-a-newsletter-da-base-dos-dados",
"WhatsApp: https://chat.whatsapp.com/HXWgdFc1RmwCoblly5KPBZ",
"YouTube: https://www.youtube.com/c/BasedosDados"))
cli::cli_end()
cli::cli_h3(
"A Base dos Dados é um projeto open-source e todo gratuito para usuários. Para nos mantermos e crescermos precisamos do seu apoio. Quanto vale as horas do seu trabalho que poupamos?
Nos apoie em https://apoia.se/basedosdados.")}
{  cli::cli_h1("Base dos Dados: Universalizando o acesso a dados no Brasil")
cli::cli_li(
c(
"Site oficial: https://basedosdados.org/",
"Documentação: https://basedosdados.github.io/mais/"))
cli::cli_end()
cli::cli_h2("Contatos")
cli::cli_ul()
cli::cli_li(
c(
"Discord: discord.gg/tuaFbAPeq5",
"Twitter: @basedosdados",
"Email: contato@basedosdados.org",
"Telegram: t.me/joinchat/OKWc3RnClXnq2hq-8o0h_w",
"Github: github.com/basedosdados",
"LinkedIn: linkedin.com/company/base-dos-dados",
"Newsletter: https://basedosdados.hubspotpagebuilder.com/assine-a-newsletter-da-base-dos-dados",
"WhatsApp: https://chat.whatsapp.com/HXWgdFc1RmwCoblly5KPBZ",
"YouTube: https://www.youtube.com/c/BasedosDados"))
cli::cli_end()
cli::cli_h3(
"A Base dos Dados é um projeto open-source e todo gratuito para usuários. Para nos mantermos e crescermos precisamos do seu apoio. Quanto vale as horas do seu trabalho que poupamos?
Nos apoie em https://apoia.se/basedosdados.")}
devtools::document()
devtools::document()
dictionary("asudhofiuasdhof")
FALSE & FALSE
devtools::test()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::test()
(tempdir()
)
expect_invisible(
download(
"select * from basedosdados.br_ibge_populacao.municipios limit 1",
file.path(tempdir(), "data.csv")))
)
devtools::test()
devtools::test()
query <- "SELECT
pib.id_municipio,
pop.ano,
pib.PIB / pop.populacao * 1000 as pib_per_capita
FROM `basedosdados.br_ibge_pib.municipios` as pib
JOIN `basedosdados.br_ibge_populacao.municipios` as pop
ON pib.id_municipio = pop.id_municipio
LIMIT 5 "
read_sql(query)
set_billing_id("workshop-basedosdados")
read_sql(query)
rlang::last_error()
set_billing_id("basedd-cava")
rlang::last_error()
read_sql(query)
rlang::last_error()
rlang::last_trace()
read_sql(query = query)
test_that("read_sql falha se não receber uma query apropriada", {
expect_error(read_sql(1232314))
})
devtools::load_all()
"select * from basedosdados.br_ibge_pib.municipios" %>% read_sql()
"select * from `basedosdados.br_ibge_pib.municipios`" %>% read_sql()
devtools::load_all()
"select * from `basedosdados.br_ibge_pib.municipios`" %>% read_sql()
test_that("read_sql falha se não receber uma query apropriada", {
expect_error(read_sql(1232314))
expect_error(read_sql(TRUE))
expect_error(read_sql())
})
test_that("read_sql retorna um tibble", {
query <- "SELECT
pib.id_municipio,
pop.ano,
pib.PIB / pop.populacao * 1000 as pib_per_capita
FROM `basedosdados.br_ibge_pib.municipios` as pib
JOIN `basedosdados.br_ibge_populacao.municipios` as pop
ON pib.id_municipio = pop.id_municipio
LIMIT 5 "
expect_s3_class(read_sql(query), "tbl_df")
expect_s3_class(read_sql("br_ibge_pib.municipios"), "tbl_df")
})
ex_query <- "select * from `basedosdados.br_ibge_pib.municipios` LIMIT 5"
test_that("download valida nomes de arquivos sem extensão", {
expect_error(
download(
"select * from basedosdados.br_ibge_populacao.municipios limit 3",
file.path(tempdir(), "arquivo"))
)
})
test_that("download requer nomes de arquivos", {
expect_error(
download("select * from basedosdados.br_ibge_populacao.municipios limit 3"))
})
test_that("read_sql retorna um tibble", {
query <- "SELECT
pib.id_municipio,
pop.ano,
pib.PIB / pop.populacao * 1000 as pib_per_capita
FROM `basedosdados.br_ibge_pib.municipios` as pib
JOIN `basedosdados.br_ibge_populacao.municipios` as pop
ON pib.id_municipio = pop.id_municipio
LIMIT 5 "
expect_s3_class(read_sql(query), "tbl_df")
expect_s3_class(read_sql("br_ibge_pib.municipios"), "tbl_df")
})
test_that("read_sql retorna um tibble", {
expect_s3_class(read_sql(ex_query), "tbl_df")
expect_s3_class(read_sql("br_ibge_pib.municipios"), "tbl_df")
})
test_that("read_sql falha se não receber uma query apropriada", {
expect_error(read_sql(1232314))
expect_error(read_sql(TRUE))
expect_error(read_sql())
})
expect_s3_class(read_sql("br_ibge_pib.municipios"), "tbl_df")
devtools::load_all()
read_sql("br_ibge_pib.municipios")
read_sql(table = "br_ibge_pib.municipios")
devtools::load_all()
read_sql(table = "br_ibge_pib.municipios")
FALSE | FAKSE
FALSE | FALSE
devtools::load_all()
read_sql(table = "br_ibge_pib.municipios")
devtools::load_all()
read_sql(table = "br_ibge_pib.municipios")
devtools::load_all()
read_sql(table = "br_ibge_pib.municipios")
devtools::test()
devtools::test()
devtools::test()
devtools::check()
test_that("read_sql falha se não receber uma query apropriada", {
expect_error(read_sql(1232314))
expect_error(read_sql(TRUE))
expect_error(read_sql(query = NA))
expect_error(read_sql())
})
devtools::check()
.Last.error.trace


test_table_exists:
  error: Check if `{{ dataset_id}}/{{ table_id }}` table exists failed
  query: |
    SELECT "{{ table_id }}" NOT IN (
        SELECT `table_name`
        FROM `{{ project_id_staging }}.{{ dataset_id }}.INFORMATION_SCHEMA.TABLES`
    ) AS failure

test_select_all_works:
  error: Check if select query in `{{ dataset_id}}/{{ table_id }}` works failed
  query: |
    SELECT NOT EXISTS (
        SELECT * 
        FROM `{{ project_id_staging }}.{{ dataset_id }}.{{ table_id }}`
    ) AS failure

test_table_has_no_null_column:
  error: Check if `{{ dataset_id}}/{{ table_id }}` columns are null failed
  query: |
    WITH
        n_nulls AS (
            SELECT col_name, COUNT(1) nulls_count
            FROM `{{ project_id_staging }}.{{ dataset_id }}.{{ table_id }}` t,
            UNNEST(REGEXP_EXTRACT_ALL(TO_JSON_STRING(t), r'"(\w+)":null')) col_name
            GROUP BY col_name
        ),
        n_total AS (
            SELECT COUNT(*) total_count
            FROM `{{ project_id_staging }}.{{ dataset_id }}.{{ table_id }}` t
        )
    SELECT col_name, nulls_count / total_count null_percent
    FROM n_nulls, n_total

### TODO | Ativar depois de testar a query
# test_primary_key_has_unique_values:
#   name: Check if primary key has unique values
#   query: |
#     SELECT
#       {% for primary_key in primary_keys %}
#       CASE WHEN COUNT(DISTINCT({{ primary_key }})) / COUNT(*) = 1 THEN 'True' ELSE 'False' END {{ primary_key }},
#       {% endfor %}
#     FROM `{{ project_id_staging }}.{{ dataset_id }}.{{ table_id }}` t

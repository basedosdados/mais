name: python-ci
on:
  push:
    paths:
      - python-package/**
      - .github/workflows/env-setup*
      - .github/workflows/python-ci.yml
  pull_request:
    paths:
      - python-package/**
      - .github/workflows/env-setup*
      - .github/workflows/python-ci.yml
  workflow_dispatch:
jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.9.x'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install isort black pylint
      - name: Check library sort
        run: |
          python -m isort --check-only --profile black .github
          python -m isort --check-only --profile black python-package
      - name: Check code format
        run: |
          python -m black --check .github
          python -m black --check python-package
      - name: Check lint
        run: |
          python -m pylint --exit-zero .github/**/*.py
          python -m pylint --exit-zero python-package
  build-linux:
    needs: lint
    runs-on: ubuntu-latest
    steps:
    - name: Check out repository
      uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.8.x'
    - name: Install dependencies
      run: |
        cd python-package
        pip install -r requirements-dev.txt
        pip install coveralls
      shell: bash
    - name: Install package
      run: |
        cd python-package
        python setup.py develop
      shell: bash
    - name: Set up base dos dados environment
      run: python .github/workflows/env-setup/env_setup.py
      env:
        BUCKET_NAME: basedosdados-dev
        PROJECT_NAME_PROD: basedosdados-dev
        PROJECT_NAME_STAGING: basedosdados-dev
        GCP_BD_PROD: ${{ secrets.GCP_BD_DEV_PROD }}
        GCP_BD_STAGING: ${{ secrets.GCP_BD_DEV_STAGING }}
      shell: bash
    - name: Extract branch name
      id: get-branch-name
      run: echo ::set-output name=name::"$(echo ${${{ github.ref }}#refs/heads/})"
      shell: bash
    - name: Test
      if: github.event_name == 'pull_request'
      run: |
        cd python-package
        python -m pytest tests
      shell: bash
    - name: Test and assess coverage
      if: |
        github.event_name == 'push' &&
        steps.get-branch-name.outputs.name == 'master'
      run: |
        cd python-package
        coverage run --source=basedosdados -m pytest tests
        coveralls --service=github
      shell: bash
      env:
        COVERALLS_FLAG_NAME: linux
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  build-windows:
    needs: lint
    runs-on: windows-latest
    steps:
    - name: Check out repository
      uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.8.x'
    - name: Install dependencies
      run: |
        cd python-package
        pip install -r requirements-dev.txt
        pip install coveralls
      shell: cmd
    - name: Install package
      run: |
        cd python-package
        python setup.py develop
      shell: cmd
    - name: Set up base dos dados environment
      run: python .github\workflows\env-setup\env_setup.py
      shell: cmd
      env:
        BUCKET_NAME: basedosdados-dev
        PROJECT_NAME_PROD: basedosdados-dev
        PROJECT_NAME_STAGING: basedosdados-dev
        GCP_BD_PROD: ${{ secrets.GCP_BD_DEV_PROD }}
        GCP_BD_STAGING: ${{ secrets.GCP_BD_DEV_STAGING }}
    - name: Extract branch name
      id: get-branch-name
      run: echo ::set-output name=name::"$(echo ${${{ github.ref }}#refs/heads/})"
      shell: bash
    - name: Test
      if: github.event_name == 'pull_request'
      run: |
        cd python-package
        python -m pytest tests
      shell: bash
    - name: Test and assess coverage
      if: |
        github.event_name == 'push' &&
        steps.get-branch-name.outputs.name == 'master'
      run: |
        cd python-package
        coverage run --source=basedosdados -m pytest tests
        coveralls --service=github
      shell: cmd
      env:
        COVERALLS_FLAG_NAME: windows
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
